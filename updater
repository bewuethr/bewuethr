#!/usr/bin/env bash

leisure=(
	'fiddling with my [dotfiles](https://github.com/bewuethr/dotfiles)'
	'finally adding refraction to my [terminal raytracer](https://github.com/bewuethr/bash-raytracer)'
	'polishing my [static site generator](https://github.com/bewuethr/pandoc-bash-blog)'
	'crafting a fascinating [blog post](https://benjaminwuethrich.dev)'
	'watching [YouTube videos about relay computers](https://youtube.com/playlist?list=PL_1HsIiuOfg3QA91DUd9kGJjQoOHwlt5Q)'
	'reading a [book](https://www.goodreads.com/review/list/37130358-benjamin?ref=nav_mybooks&shelf=currently-reading)'
	'tweaking my [Slack workspace analyzer action](https://github.com/bewuethr/slack-analyzer)'
	'fighting with Jekyll to make [this](https://swissclubtoronto.ca) better'
	'putting some [miles](https://www.strava.com/athletes/889963) in'
)

work=(
	'clicking some merge buttons'
	'moving some Jira tickets'
	'reviewing some pull requests'
	'interviewing a potential new colleague'
	'making a service more micro'
	'overthrowing the banking establishment'
	'maintaining a Git mailmap'
	'figuring out who should take care of which service'
	'de-flaking a test'
	'polishing a command line interface'
	'making a reusable workflow more reusable'
	'lighting a fire under some Acctions workflow'
)
work=("${work[@]/#/'working for [this bunch](https://github.com/kohofinancial), '}")

rcleisure=(
	'exploring Brooklyn'
	'[running](https://www.strava.com/athletes/889963) in Prospect Park'
	'catching up on [Swiss Club](https://swissclubtoronto.ca/) stuff'
	'reading a [book](https://www.goodreads.com/review/list/37130358-benjamin?ref=nav_mybooks&shelf=currently-reading)'
)

rcwork=(
	'trying to make sense of mobile phone sensors'
	'digging into the [WebXR Device API](https://www.w3.org/TR/webxr/)'
	'reading the [Pickaxe book](https://pragprog.com/titles/ruby5/programming-ruby-3-2-5th-edition/)'
	'implementing [Git in Ruby](https://shop.jcoglan.com/building-git/)'
	'flexing my [volitional muscles](https://www.recurse.com/self-directives#volitional-muscles) and doing something I did not think I would'
	'[learning generously](https://www.recurse.com/self-directives#learn-generously) and prepping a demo or talk'
	'writing a [blog post](https://benjaminwuethrich.dev)'
)

rcstatus=(
	'Working at the edge of my abilities'
	'Building my volitional muscles'
	'Learning generously'
)

getweather() {
	local -n w=$1
	local location=$2
	# shellcheck disable=SC2034
	readarray -t w < <(
		curl --silent --get "wttr.in/${location// /+}" \
			--data-urlencode 'm' \
			--data-urlencode 'lang=en' \
			--data-urlencode 'format=%C\n%t\n'
	)
}

update() {
	local location=$1
	local special=$2
	local weekday hour
	read -r weekday hour <<< "$(date '+%A %-H')"

	local mode activity emoji status

	# Determine if I'm sleeping, working, or doing a leisure activity
	case $hour in
		[0-7]) mode='sleeping' ;;
		1[89] | 2[0-3]) mode='leisure' ;;
		*)
			if [[ $special == 'holiday' ]]; then
				mode='leisure'
			else
				case $weekday in
					Saturday | Sunday) mode='leisure' ;;
					*) mode='working' ;;
				esac
			fi
			;;
	esac

	case $mode in
		sleeping)
			activity="I'm probably sleeping."
			emoji='sleeping'
			status='Snoozing'
			;;
		working)
			if [[ $special == 'recurse' ]]; then
				activity="I'm probably ${rcwork[RANDOM % ${#rcwork[@]}]}."
				emoji='octopus'
				status="${rcstatus[RANDOM % ${#rcstatus[@]}]}"
			else
				activity="I'm probably ${work[RANDOM % ${#work[@]}]}."
				emoji='nerd_face'
				status='Work work work'
			fi
			;;
		leisure)
			if [[ $special == 'recurse' ]]; then
				activity="I might be ${rcleisure[RANDOM % ${#rcleisure[@]}]}."
			else
				activity="I might be ${leisure[RANDOM % ${#leisure[@]}]}."
			fi
			case $weekday in
				Saturday | Sunday)
					emoji='joystick'
					status='Playing'
					;;
				*)
					emoji='man_juggling'
					status='Juggling'
					;;
			esac
			;;
	esac

	local weather
	getweather weather "$location"

	case $special in
		'holiday')
			printf -v activity '%s %s' "And I'm on holiday! :desert_island:" "$activity"
			;;
		'recurse')
			printf -v activity '%s %s' \
				"I'm currently attending the [Recurse Center](https://www.recurse.com/scout/click?t=90d9bc776f490dab14675dbf7b143cae)." \
				"$activity"
			;;
	esac

	case ${weather[*]} in
		'Unknown location'* | '')
			echo "Updating README with $weekday and $activity, weather unknown..."
			cat <<- EOF > README.md
				### Hi there :wave:

				It's $weekday! $activity

				Weather in $location: who knows, wttr.in is currently down...
			EOF
			;;
		*)
			echo "Updating README with $weekday and $activity, weather ${weather[*]}..."
			cat <<- EOF > README.md
				### Hi there :wave:

				It's $weekday! $activity

				Weather in $location: ${weather[0],}, at ${weather[1]}.
			EOF
			;;
	esac

	# Don't change status when I'm on holiday, it's probably a message about
	# when I'll be back
	if [[ $special == 'holiday' ]]; then
		return
	fi

	echo "Updating profile status with $emoji and $status..." >&2
	local ghparams=(--emoji "$emoji")
	if [[ $special != 'none' ]]; then
		echo "Setting limited availability..." >&2
		ghparams+=(--limited)
	fi
	GITHUB_TOKEN=$STATUS_TOKEN gh user-status set "$status" "${ghparams[@]}"
}

push() {
	# Set git name and email
	git config --global user.name 'github-actions'
	git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

	if [[ -n $(git status --porcelain) ]]; then
		echo "Change detected; pushing new README..."
		git add README.md .github/updater/metadata.yml
		git commit --message 'Update README and maybe metadata'
		git push
	fi
}

main() {
	set -o errexit
	gh ext install vilmibm/gh-user-status --pin v1.1.0
	local location=$1
	local special=$2
	update "$location" "$special"
	push
}

[[ ${BASH_SOURCE[0]} == "$0" ]] && main "$@"
